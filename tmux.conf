# ==========================
# ===  General settings  ===
# ==========================

# set-option -g default-shell $HOME/.linuxbrew/bin/fish
set-option -g default-shell "/usr/local/bin/fish"
# set-option -g default-command "exec /bin/bash"

set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*alacritty*:RGB"
set -ga terminal-overrides ",*256color*:RGB"

set -g history-limit 10000
set -g buffer-limit 10000
set -sg escape-time 0
set -g display-time 3000
set -g remain-on-exit off
set -g repeat-time 300
setw -g allow-rename off
setw -g automatic-rename off
setw -g aggressive-resize on
# set status 1

# Change prefix key to C-a, easier to type, same to "screen"
unbind C-b
set -g prefix C-a

# Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#I:#W"

# Start index of window/pane with 1, because we're humans, not computers
set -g base-index 1
setw -g pane-base-index 1

# Enable mouse support
set -g mouse on


# ==========================
# ===   Key bindings     ===
# ==========================

# Unbind default key bindings, we're going to override
unbind "\$" # rename-session
unbind ,    # rename-window
unbind %    # split-window -h
unbind '"'  # split-window
# unbind }    # swap-pane -D
# unbind {    # swap-pane -U
unbind [    # paste-buffer
unbind ]
unbind f    # find-window
unbind "'"  # select-window
unbind n    # next-window
unbind p    # previous-window
unbind l    # last-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
unbind o    # focus thru panes
unbind &    # kill-window
unbind "#"  # list-buffer
unbind =    # choose-buffer
unbind z    # zoom-pane
unbind M-Up  # resize 5 rows up
unbind M-Down # resize 5 rows down
unbind M-Right # resize 5 rows right
unbind M-Left # resize 5 rows left


# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"

# Reload tmux configuration
bind C-r source-file ~/.tmux.conf \; display "Config reloaded"

# new window and retain cwd
bind c new-window -c "#{pane_current_path}"

# Prompt to rename window right after it's created
# set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Split panes
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# Select pane and windows
bind -r C-[ previous-window
bind -r C-] next-window
bind -r [ select-pane -t :.-
bind -r ] select-pane -t :.+
bind -r Tab last-window   # cycle thru MRU tabs
bind -r C-o swap-pane -D

# Zoom pane
bind + resize-pane -Z

# Link window
bind L command-prompt -p "Link window from (session:window): " "link-window -s %% -a"

# Swap panes back and forth with 1st pane
# When in main-(horizontal|vertical) layouts, the biggest/widest panel is always @1
# bind \ if '[ #{pane_index} -eq 1 ]' \
     # 'swap-pane -s "!"' \
     # 'select-pane -t:.1 ; swap-pane -d -t 1 -s "!"'

# Kill pane/window/session shortcuts
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Merge session with another one (e.g. move all windows)
# If you use adhoc 1-window sessions, and you want to preserve session upon exit
# but don't want to create a lot of small unnamed 1-window sessions around
# move all windows from current session to main named one (dev, work, etc)
bind C-u command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

# Detach from session
bind d detach
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

# Hide status bar on demand
bind C-s if -F '#{s/off//:status}' 'set status off' 'set status on'

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2



# ==================================================
# === Window monitoring for activity and silence ===
# ==================================================
bind m setw monitor-activity \; display-message 'Monitor window activity [#{?monitor-activity,ON,OFF}]'
bind M if -F '#{monitor-silence}' \
    'setw monitor-silence 0 ; display-message "Monitor window silence [OFF]"' \
    'command-prompt -p "Monitor silence: interval (s)" "setw monitor-silence %%"'

# Activity bell and whistles
set -g visual-activity on

# TODO: Does not work as well, check on newer versions
# set -g visual-silence on

# BUG: bell-action other ignored · Issue #1027 · tmux/tmux · GitHub - https://github.com/tmux/tmux/issues/1027
# set -g visual-bell on
# setw -g bell-action other

# ================================================
# ===     Copy mode, scroll and clipboard      ===
# ================================================
# set -g @copy_use_osc52_fallback on

# Prefer vi style key table
setw -g mode-keys vi

bind p paste-buffer
bind C-p choose-buffer

# trigger copy mode by
bind Enter copy-mode
bind -n C-f copy-mode \; command-prompt -i -p "(search up)" "send-keys -X search-backward-incremental \"%%%\""
bind / copy-mode \; command-prompt -i -p "(search up)" "send-keys -X search-backward-incremental \"%%%\""
# bind -T copy-mode-vi m send-keys -X search-backward "[a-f0-9]{2}:[a-f0-9]{2}:[a-f0-9]{2}:[a-f0-9]{2}:[a-f0-9]{2}:[a-f0-9]{2}"
# bind -T copy-mode-vi u send-keys -X search-backward "(https?://|git@|git://|ssh://|ftp://|file:///)[[:alnum:]?=%/_.:,;~@!#$&()*+-]*"
# bind -T copy-mode-vi i send-keys -X search-backward "([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|(([a-f0-9:]+:+)+[a-f0-9]+)"
# normal mode
# bind -n C-m copy-mode \; send-keys -X search-backward "[a-f0-9]{2}:[a-f0-9]{2}:[a-f0-9]{2}:[a-f0-9]{2}:[a-f0-9]{2}:[a-f0-9]{2}"
# bind -n C-u copy-mode \; send-keys -X search-backward "(https?://|git@|git://|ssh://|ftp://|file:///)[[:alnum:]?=%/_.:,;~@!#$&()*+-]*"
# bind -n C-i copy-mode \; send-keys -X search-backward "([0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3})|(([a-f0-9:]+:+)+[a-f0-9]+)"
bind / copy-mode \; command-prompt -i -p "(search up)" "send -X search-backward-incremental \"%%%\""
bind -T copy-mode-vi / command-prompt -i -p "(search up)" "send -X search-backward-incremental \"%%%\""

# Scroll up/down by 1 line, half screen, whole screen
bind -T copy-mode-vi C-Up              send-keys -X scroll-up
bind -T copy-mode-vi C-Down            send-keys -X scroll-down
bind -T copy-mode-vi C-PageUp          send-keys -X halfpage-up
bind -T copy-mode-vi C-PageDown        send-keys -X halfpage-down
bind -T copy-mode-vi PageDown          send-keys -X page-down
bind -T copy-mode-vi PageUp            send-keys -X page-up
bind -T copy-mode-vi v                 send-keys -X begin-selection
bind -T copy-mode-vi /                 command-prompt -i -p "(search up)" "send-keys -X search-backward-incremental \"%%%\""
bind -T copy-mode-vi ?                 command-prompt -i -p "(search down)" "send-keys -X search-forward-incremental \"%%%\""
# bind -T copy-mode-vi / send-keys -X search-backward-incremental
# bind -T copy-mode-vi ? send-keys -X search-forward-incremental
# bind -T copy-mode-vi y send-keys -X copy-selection

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 3 scroll-up
bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 3 scroll-down
bind -T copy-mode-vi y                 send-keys -X copy-selection-and-cancel
# bind -T copy-mode-vi Space             send-keys -X copy-selection-and-cancel
# bind -T copy-mode-vi y                 send-keys -X copy-pipe-and-cancel "pbcopy -in -selection clipboard"
# bind -T copy-mode-vi Enter              send-keys -X copy-pipe-and-cancel "pbcopy -in -selection clipboard"

# wrap default shell in reattach-to-user-namespace if available
# there is some hack with `exec & reattach`, credits to "https://github.com/gpakosz/.tmux"
# don't really understand how it works, but at least window are not renamed to "reattach-to-user-namespace"
# if -b "command -v reattach-to-user-namespace > /dev/null 2>&1" \
    "run 'tmux set -g default-command \"exec $(tmux show -gv default-shell) 2>/dev/null & reattach-to-user-namespace -l $(tmux show -gv default-shell)\"'"


# iTerm2 works with clipboard out of the box, set-clipboard already set to "external"
# tmux show-options -g -s set-clipboard
# set-clipboard on|external
set -g set-clipboard on

# =====================================
# ===           Theme               ===
# =====================================

# Feel free to NOT use this variables at all (remove, rename)
# this are named colors, just for convenience
# gruvbox-material-dark
color_bg0="#282828"
color_bg1="#32302f"
color_bg2="#32302f"
color_bg3="#45403d"
color_bg4="#45403d"
color_bg5="#5a524c"
color_bg_statusline1="#32302f"
color_bg_statusline2="#3a3735"
color_bg_statusline3="#504945"
color_bg_diff_green="#34381b"
color_bg_visual_green="#3b4439"
color_bg_diff_red="#402120"
color_bg_visual_red="#4c3432"
color_bg_diff_blue="#0e363e"
color_bg_visual_blue="#374141"
color_bg_visual_yellow="#4f422e"
color_bg_current_word="#3c3836"
color_fg0="#e2cca9"
color_fg1="#e2cca9"
color_red="#f2594b"
color_orange="#f28534"
color_yellow="#e9b143"
color_green="#b0b846"
color_aqua="#8bba7f"
color_blue="#80aa9e"
color_purple="#d3869b"
color_bg_red="#db4740"
color_bg_green="#b0b846"
color_bg_yellow="#e9b143"
color_grey0="#7c6f64"
color_grey1="#928374"
color_grey2="#a89984"

# This is a theme CONTRACT, you are required to define variables below
# Change values, but not remove/rename variables itself
color_dark="$color_bg0"
color_light="$color_fg0"
color_session_text="$color_blue"
color_status_text="$color_light"
color_main="$color_orange"
color_secondary="$color_aqua"
# color_secondary="$color_orange_true"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="$color_main"
color_window_off_status_bg="$color_bg5"
color_window_off_status_current_bg="$color_grey2"


# =====================================
# ===    Appearence and status bar  ===
# ======================================

set -g mode-style "fg=default,bg=$color_main"

# command line style
set -g message-style "fg=$color_main,bg=$color_dark"

# status line style
set -g status-style "fg=$color_fg0,bg=$color_bg0"

# window segments in status line
set -g window-status-separator ""
# separator_powerline_left=""
# sep_right=""
separator_powerline_left=""
sep_right=""

# setw -g window-status-style "fg=$color_status_text,bg=$color_dark"
setw -g window-status-format " #I:#W "
# setw -g window-status-style "bg=$color_bg3"
setw -g window-status-current-style "fg=$color_bg_current_word,bold,bg=$color_main"
# setw -g window-status-current-format "#[fg=$color_bg0,bg=$color_main]$sep_right#[#{E:window-status-current-style}] #I:#W #[fg=$color_main,bg=$color_bg0]$sep_right#[#{E:window-status-current-style}]"
setw -g window-status-current-format "#[fg=$color_bg0,bg=$color_main]$sep_right#[default] #I:#W #[fg=$color_main,bg=$color_bg0]$sep_right#[default]"

# when window has monitoring notification
setw -g window-status-activity-style "fg=$color_main"
setw -g window-status-separator " "

# outline for active pane
setw -g pane-active-border-style "fg=$color_main"

# general status bar settings
set -g status on
set -g status-interval 3
set -g status-position top
set -g status-justify left
set -g status-right-length 100

# define widgets we're going to use in status bar
# note, that this is not the complete list, some of them are loaded from plugins
wg_session="#[fg=$color_dark,bold,bg=$color_fg1] #S #[default]#[fg=$color_fg1]$sep_right#[default]"
wg_date="#[fg=$color_bg_statusline3]$separator_powerline_left#[fg=$color_light,bg=$color_bg_statusline3,bold] %m-%d %H:%M#[fg=default]"
wg_user_host="#[fg=$color_main]$separator_powerline_left#[reverse]#[bg=$color_bg0,bold] #(whoami)@#H#[default]"
wg_is_zoomed="#[fg=$color_dark,bg=$color_secondary]#{?window_zoomed_flag,[Z],}#[default]"
wg_is_keys_off="#[fg=$color_dark,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo ' OFF ')#[default]"

set -g status-left "$wg_session"
set -g status-right "#{prefix_highlight} $wg_is_keys_off $wg_is_zoomed #(tmux-sysstat-rs) $wg_date $wg_user_host"

set -g copy-mode-match-style "reverse"
set -g copy-mode-current-match-style "bg=$color_main,fg=$color_bg0"


# Configure tmux-prefix-highlight colors
set -g @prefix_highlight_output_prefix '['
set -g @prefix_highlight_output_suffix ']'
set -g @prefix_highlight_fg "$color_dark"
set -g @prefix_highlight_bg "$color_secondary"
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr "fg=$color_dark,bg=$color_secondary"


# =====================================
# ===        Renew environment      ===
# =====================================
# set -g update-environment \
  # "DISPLAY\
  # SSH_ASKPASS\
  # SSH_AUTH_SOCK\
  # SSH_AGENT_PID\
  # SSH_CONNECTION\
  # SSH_TTY\
  # WINDOWID\
  # XAUTHORITY"

# bind '$' run "~/.tmux/renew_env.sh"


# ============================
# ===       Plugins        ===
# ============================
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-sidebar'
# set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'fcsonline/tmux-thumbs'
if-shell 'uname | grep -q Darwin' {
    set -g @plugin 'minhdanh/tmux-network-speed'
}{
    set -g @plugin 'tmux-plugins/tmux-net-speed'
    set -g @net_speed_interfaces "enp1s0f0 enp1s0f1"
    set -g @net_speed_format "↓  #[fg=$color_green]%-6s#[fg=default] ↑  #[fg=$color_green]%-6s#[fg=default]"
    wg_netspeed_linux="#[fg=$color_bg4]$separator_powerline_left#[default]#[fg=$color_light,bg=$color_bg4]#{net_speed}#[default]#[fg=$color_bg0,bg=$color_bg4]"
    set -g @sysstat_cpu_view_tmpl '#[fg=#{cpu.color}]#{cpu.pused}#[default]'
    set -g @sysstat_mem_view_tmpl '#[fg=#{mem.color}]#{mem.pused}#[default]'
    wg_cpu_mem="#[fg=$color_bg2]$separator_powerline_left#[default]#[fg=$color_light,bg=$color_bg2] CPU: #{sysstat_cpu}#[fg=$color_light,bg=$color_bg2]| Mem: #{sysstat_mem}#[default]#[fg=$color_bg0,bg=$color_bg2]"

    set -g @plugin 'samoshkin/tmux-plugin-sysstat'
    # wg_cpu_mem="#(tmux-mem-cpu-load -q -c -i 3 -m 2 -a 0)"
    # set -g @plugin 'thewtex/tmux-mem-cpu-load'
}

# tmux-thumbs configuration
set -g @thumbs-key F
set -g @thumbs-unique enabled
set -g @thumbs-contrast 1
set -g @thumbs-command 'tmux set-buffer -w -- {}'
set -g @thumbs-multi-command 'tmux set-buffer -w -- "{}"'
# set -g @thumbs-multi-command 'tmux set-buffer -w -- {}'
set -g @thumbs-reverse enabled
set -g @thumbs-position off_left
set -g @thumbs-alphabet qwerty

set -g @thumbs-bg-color "$color_aqua"
set -g @thumbs-fg-color "$color_bg0"
set -g @thumbs-hint-bg-color "$color_main"
set -g @thumbs-hint-fg-color "$color_bg0"
set -g @thumbs-select-bg-color "$color_yellow"
set -g @thumbs-select-fg-color "$color_bg0"
set -g @thumbs-multi-bg-color "$color_fg0"
set -g @thumbs-multi-fg-color "$color_bg0"


## k8s regex
set -g @thumbs-regexp-1 '((deployment.app|binding|componentstatuse|configmap|endpoint|event|limitrange|namespace|node|persistentvolumeclaim|persistentvolume|pod|podtemplate|replicationcontroller|resourcequota|secret|serviceaccount|service|mutatingwebhookconfiguration.admissionregistration.k8s.io|validatingwebhookconfiguration.admissionregistration.k8s.io|customresourcedefinition.apiextension.k8s.io|apiservice.apiregistration.k8s.io|controllerrevision.apps|daemonset.apps|deployment.apps|replicaset.apps|statefulset.apps|tokenreview.authentication.k8s.io|localsubjectaccessreview.authorization.k8s.io|selfsubjectaccessreviews.authorization.k8s.io|selfsubjectrulesreview.authorization.k8s.io|subjectaccessreview.authorization.k8s.io|horizontalpodautoscaler.autoscaling|cronjob.batch|job.batch|certificatesigningrequest.certificates.k8s.io|events.events.k8s.io|daemonset.extensions|deployment.extensions|ingress.extensions|networkpolicies.extensions|podsecuritypolicies.extensions|replicaset.extensions|networkpolicie.networking.k8s.io|poddisruptionbudget.policy|clusterrolebinding.rbac.authorization.k8s.io|clusterrole.rbac.authorization.k8s.io|rolebinding.rbac.authorization.k8s.io|role.rbac.authorization.k8s.io|storageclasse.storage.k8s.io)[[:alnum:]_#$%&+=/@-]+)|([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})|([0-9a-f]{12,128})|([[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3})'


# Plugin properties
set -g @sidebar-tree 't'
set -g @sidebar-tree-focus 'T'
set -g @sidebar-tree-command 'tree -C'


# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CONNECTION"' {
    set -g status-position bottom
    set -g status-right "#{prefix_highlight} $wg_is_keys_off $wg_is_zoomed #(tmux-sysstat-rs) $wg_date $wg_user_host"
}

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$sep_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$sep_right#[default]" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S

# Run all plugins' scripts
run '~/.tmux/plugins/tpm/tpm'
